version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: devops/Dockerfile
    expose:
      - "${APP_PORT-8081}"
    volumes:
      - ./dub.json:/app/dub.json
    environment:
      - DUB_HTTP_PROXY=${DUB_HTTP_PROXY}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    command: dub run --build=release
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: ${APP_MEMORY_LIMIT-4G}
        reservations:
          cpus: '1'
          memory: ${APP_MEMORY_RESERVATION-1G}

  nginx:
    image: nginx:latest
    ports:
      - "${NGINX_PORT-80}:80"
    volumes:
      - ./devops/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: ${NGINX_MEMORY_LIMIT-4G}
        reservations:
          cpus: '2'
          memory: ${NGINX_MEMORY_RESERVATION-2G}
  
  database:
    image: postgres:15.2-alpine
    restart: "no"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - 5432:5432
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./devops/volumes/database:/var/lib/postgresql/data
    depends_on:
      - app

  k6:
    image: grafana/k6:latest
    user: root
    volumes:
      - ./k6:/scripts
    networks:
      - app-network
    command: run /scripts/app-up.js
    depends_on:
      - nginx

networks:
  app-network:
    driver: bridge